generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  email      String     @unique
  name       String?
  avatarPath String     @default("/assets/noAvatar.png") @map("avatar_path")
  password   String
  playlists  Playlist[]
}

model Song {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  title       String     @unique
  coverBig    String     @map("cover_big")
  coverMedium String     @map("cover_medium")
  coverSmall  String     @map("cover_small")
  duration    Int
  releaseDate DateTime   @map("release_date")
  mp3Path     String     @map("mp3_path")
  albums      Album[]
  artists     Artist[]
  genres      Genre[]
  playlists   Playlist[]
}

model Album {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  title       String   @unique
  coverBig    String   @map("cover_big")
  coverMedium String   @map("cover_medium")
  coverSmall  String   @map("cover_small")
  fans        Int
  releaseDate DateTime @map("release_date")
  artist      Artist[]
  genres      Genre[]
  songs       Song[]
}

model Artist {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  name          String   @unique
  followers     Int
  pictureBig    String   @map("picture_big")
  pictureMedium String   @map("picture_medium")
  pictureSmall  String   @map("picture_small")
  albums        Album[]
  songs         Song[]
}

model Playlist {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  title       String   @unique
  coverBig    String   @map("cover_big")
  coverMedium String   @map("cover_medium")
  coverSmall  String   @map("cover_small")
  fans        Int
  releaseDate DateTime @map("release_date")
  userId      Int?
  User        User?    @relation(fields: [userId], references: [id])
  songs       Song[]
}

model Genre {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String   @unique
  albums    Album[]
  songs     Song[]
}
