// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  email      String   @unique
  name       String?
  avatarPath String   @default("/assets/noAvatar.png") @map("avatar_path")
  password   String
}

model Song {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  title       String
  coverBig    String   @map("cover_big")
  coverMedium String   @map("cover_medium")
  coverSmall  String   @map("cover_small")
  duration    Int
  releaseDate DateTime @map("release_date")
  mp3Path     String   @map("mp3_path")

  Artist     Artist?   @relation(fields: [artistId], references: [id])
  artistId   Int?
  Genre      Genre?    @relation(fields: [genreId], references: [id])
  genreId    Int?
  Album      Album?    @relation(fields: [albumId], references: [id])
  albumId    Int?
  Playlist   Playlist? @relation(fields: [playlistId], references: [id])
  playlistId Int?
}

model Artist {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  name          String
  followers     Int
  pictureBig    String   @map("picture_big")
  pictureMedium String   @map("picture_medium")
  pictureSmall  String   @map("picture_small")

  songs Song[]
  Album Album[]
}

model Album {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  title       String
  coverBig    String   @map("cover_big")
  coverMedium String   @map("cover_medium")
  coverSmall  String   @map("cover_small")
  fans        Int
  releaseDate DateTime @map("release_date")

  artist   Artist @relation(fields: [artistId], references: [id])
  artistId Int
  songs    Song[]
}

model Playlist {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  title       String
  coverBig    String   @map("cover_big")
  coverMedium String   @map("cover_medium")
  coverSmall  String   @map("cover_small")
  fans        Int

  releaseDate DateTime @map("release_date")
  songs       Song[]
}

model Genre {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String   @unique

  songs Song[]
}
